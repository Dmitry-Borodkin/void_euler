{   v_import("imports.void");
}

{   enable_imports(); }


//---------------------------------------------------------------------
double = float(64);

sqrt: (double) ~> double;
ceil: (double) ~> double;
log:  (double) ~> double;


//---------------------------------------------------------------------
  N = 10001;
//N = 10000001;

{   printf("N: %d\n", N); }

S = (N*(log(N) + log(log(N))) : int) + 1;

sieve = new bool[S];        defer delete[] sieve;


//---------------------------------------------------------------------
{   memset(sieve, 0, S);

    sieve[2] := true;

    for (i: &int := 3; i < S; i += 2)
    {
        sieve[i] := true;
    }

    R = (ceil(sqrt(S)) : int);

    for (i: &int := 3; i < R; i += 2)
    {
        if (sieve[i])
        {
            for (k: &int := i*i, i2 = 2*i; k < S; k += i2)
            {
                sieve[k] := false;
            }
        }
    }
}


//---------------------------------------------------------------------
{
    n: &int := 1;

    p: &int := 3;

    for (; p < S; p += 2)
    {
        if (sieve[p])
        {
            ++n;

            if (n == N) v_break();
        }
    }

    if (n == N) printf("Found: %d\n", p);
    else        printf("Not found\n");
}


