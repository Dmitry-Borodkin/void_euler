{   v_import("imports.void");
}

{   enable_imports(); }


//---------------------------------------------------------------------
sum_proper_divisors: (n: int) -> int
{
    s: &int := 1;

    i: &int := 2;

    loop
    {
        if (i >= n) v_break();

        i2 = i * i;

        if (i2 == n)  v_return(s + i);
        if (i2 > n)   v_return(s);

        if (n%i == 0) s += i + n/i;

        ++i;
    }

    v_return(s);    //- ?
}


//---------------------------------------------------------------------
is_abundant: (n: int) -> bool
{
    v_return(n < sum_proper_divisors(n));
}


//---------------------------------------------------------------------
{   N = 30000;

    f = v_malloc(int(8), N);
    defer v_mfree(f);

    memset(f, 0, N);

    f_abundant = 1 << 0;
    f_sum2abs  = 1 << 1;

    //-----------------------------------------------------------------
    c: &int := 0;
    n: &int := 2;

    loop
    {
        if (n >= N) v_break();

        if (is_abundant(n))
        {
            f[n] := f_abundant;

            ++c;
        }

        ++n;
    }

//  printf("c: %d\n", c);

    //-----------------------------------------------------------------
    {   ab = v_malloc(int, c);
        defer v_mfree(ab);

        n := 2;

        i: &int := 0;

        loop
        {
            if (n >= N) v_break();

            if (f[n])   ab[i++] := n;

            ++n;
        }

        //-------------------------------------------------------------
        i := 0;

        loop
        {
            if (i >= c) v_break();

            j: &int := 0;

            loop
            {
                if (j > i) v_break();

                num = ab[i] + ab[j];

                if (num >= N) v_break();

                f[num] |= f_sum2abs;

                ++j;
            }

            ++i;
        }
    }

    //-----------------------------------------------------------------
    sum: &int := 0;

    n := 1;

    loop
    {
        if (n >= N) v_break();

        if (!(f[n] & f_sum2abs))  sum += n;

        ++n;
    }

    //-----------------------------------------------------------------
    printf("%d\n", sum);
}


