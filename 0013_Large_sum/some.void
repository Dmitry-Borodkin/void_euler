{   v_import("imports.void");
}

{   enable_imports(); }


//---------------------------------------------------------------------
SX =  50;
SY = 100;


//---------------------------------------------------------------------
data_init: (d: &int(8)[SX], s: *const char) -> void
{
    i: &int := 0;

    loop
    {
        if (i >= SX) v_break();

        d[i] := (s[i] - '0' : int(8));

//      printf("%d", d[i]);

        ++i;
    }

//  printf("\n");
}


//---------------------------------------------------------------------
data: & *int(8)[SX] := v_undef();

{   data := v_malloc(int(8)[SX], SY);

    d: & *int(8)[SX] := data;

    data_init(*d++, "37107287533902102798797998220837590246510135740250");
    data_init(*d++, "46376937677490009712648124896970078050417018260538");
    data_init(*d++, "74324986199524741059474233309513058123726617309629");
    data_init(*d++, "91942213363574161572522430563301811072406154908250");
    data_init(*d++, "23067588207539346171171980310421047513778063246676");
    data_init(*d++, "89261670696623633820136378418383684178734361726757");
    data_init(*d++, "28112879812849979408065481931592621691275889832738");
    data_init(*d++, "44274228917432520321923589422876796487670272189318");
    data_init(*d++, "47451445736001306439091167216856844588711603153276");
    data_init(*d++, "70386486105843025439939619828917593665686757934951");
    data_init(*d++, "62176457141856560629502157223196586755079324193331");
    data_init(*d++, "64906352462741904929101432445813822663347944758178");
    data_init(*d++, "92575867718337217661963751590579239728245598838407");
    data_init(*d++, "58203565325359399008402633568948830189458628227828");
    data_init(*d++, "80181199384826282014278194139940567587151170094390");
    data_init(*d++, "35398664372827112653829987240784473053190104293586");
    data_init(*d++, "86515506006295864861532075273371959191420517255829");
    data_init(*d++, "71693888707715466499115593487603532921714970056938");
    data_init(*d++, "54370070576826684624621495650076471787294438377604");
    data_init(*d++, "53282654108756828443191190634694037855217779295145");
    data_init(*d++, "36123272525000296071075082563815656710885258350721");
    data_init(*d++, "45876576172410976447339110607218265236877223636045");
    data_init(*d++, "17423706905851860660448207621209813287860733969412");
    data_init(*d++, "81142660418086830619328460811191061556940512689692");
    data_init(*d++, "51934325451728388641918047049293215058642563049483");
    data_init(*d++, "62467221648435076201727918039944693004732956340691");
    data_init(*d++, "15732444386908125794514089057706229429197107928209");
    data_init(*d++, "55037687525678773091862540744969844508330393682126");
    data_init(*d++, "18336384825330154686196124348767681297534375946515");
    data_init(*d++, "80386287592878490201521685554828717201219257766954");
    data_init(*d++, "78182833757993103614740356856449095527097864797581");
    data_init(*d++, "16726320100436897842553539920931837441497806860984");
    data_init(*d++, "48403098129077791799088218795327364475675590848030");
    data_init(*d++, "87086987551392711854517078544161852424320693150332");
    data_init(*d++, "59959406895756536782107074926966537676326235447210");
    data_init(*d++, "69793950679652694742597709739166693763042633987085");
    data_init(*d++, "41052684708299085211399427365734116182760315001271");
    data_init(*d++, "65378607361501080857009149939512557028198746004375");
    data_init(*d++, "35829035317434717326932123578154982629742552737307");
    data_init(*d++, "94953759765105305946966067683156574377167401875275");
    data_init(*d++, "88902802571733229619176668713819931811048770190271");
    data_init(*d++, "25267680276078003013678680992525463401061632866526");
    data_init(*d++, "36270218540497705585629946580636237993140746255962");
    data_init(*d++, "24074486908231174977792365466257246923322810917141");
    data_init(*d++, "91430288197103288597806669760892938638285025333403");
    data_init(*d++, "34413065578016127815921815005561868836468420090470");
    data_init(*d++, "23053081172816430487623791969842487255036638784583");
    data_init(*d++, "11487696932154902810424020138335124462181441773470");
    data_init(*d++, "63783299490636259666498587618221225225512486764533");
    data_init(*d++, "67720186971698544312419572409913959008952310058822");
    data_init(*d++, "95548255300263520781532296796249481641953868218774");
    data_init(*d++, "76085327132285723110424803456124867697064507995236");
    data_init(*d++, "37774242535411291684276865538926205024910326572967");
    data_init(*d++, "23701913275725675285653248258265463092207058596522");
    data_init(*d++, "29798860272258331913126375147341994889534765745501");
    data_init(*d++, "18495701454879288984856827726077713721403798879715");
    data_init(*d++, "38298203783031473527721580348144513491373226651381");
    data_init(*d++, "34829543829199918180278916522431027392251122869539");
    data_init(*d++, "40957953066405232632538044100059654939159879593635");
    data_init(*d++, "29746152185502371307642255121183693803580388584903");
    data_init(*d++, "41698116222072977186158236678424689157993532961922");
    data_init(*d++, "62467957194401269043877107275048102390895523597457");
    data_init(*d++, "23189706772547915061505504953922979530901129967519");
    data_init(*d++, "86188088225875314529584099251203829009407770775672");
    data_init(*d++, "11306739708304724483816533873502340845647058077308");
    data_init(*d++, "82959174767140363198008187129011875491310547126581");
    data_init(*d++, "97623331044818386269515456334926366572897563400500");
    data_init(*d++, "42846280183517070527831839425882145521227251250327");
    data_init(*d++, "55121603546981200581762165212827652751691296897789");
    data_init(*d++, "32238195734329339946437501907836945765883352399886");
    data_init(*d++, "75506164965184775180738168837861091527357929701337");
    data_init(*d++, "62177842752192623401942399639168044983993173312731");
    data_init(*d++, "32924185707147349566916674687634660915035914677504");
    data_init(*d++, "99518671430235219628894890102423325116913619626622");
    data_init(*d++, "73267460800591547471830798392868535206946944540724");
    data_init(*d++, "76841822524674417161514036427982273348055556214818");
    data_init(*d++, "97142617910342598647204516893989422179826088076852");
    data_init(*d++, "87783646182799346313767754307809363333018982642090");
    data_init(*d++, "10848802521674670883215120185883543223812876952786");
    data_init(*d++, "71329612474782464538636993009049310363619763878039");
    data_init(*d++, "62184073572399794223406235393808339651327408011116");
    data_init(*d++, "66627891981488087797941876876144230030984490851411");
    data_init(*d++, "60661826293682836764744779239180335110989069790714");
    data_init(*d++, "85786944089552990653640447425576083659976645795096");
    data_init(*d++, "66024396409905389607120198219976047599490197230297");
    data_init(*d++, "64913982680032973156037120041377903785566085089252");
    data_init(*d++, "16730939319872750275468906903707539413042652315011");
    data_init(*d++, "94809377245048795150954100921645863754710598436791");
    data_init(*d++, "78639167021187492431995700641917969777599028300699");
    data_init(*d++, "15368713711936614952811305876380278410754449733078");
    data_init(*d++, "40789923115535562561142322423255033685442488917353");
    data_init(*d++, "44889911501440648020369068063960672322193204149535");
    data_init(*d++, "41503128880339536053299340368006977710650566631954");
    data_init(*d++, "81234880673210146739058568557934581403627822703280");
    data_init(*d++, "82616570773948327592232845941706525094512325230608");
    data_init(*d++, "22918802058777319719839450180888072429661980811197");
    data_init(*d++, "77158542502016545090413245809786882778948721859617");
    data_init(*d++, "72107838435069186155435662884062257473692284509516");
    data_init(*d++, "20849603980134001723930671666823555245252804609722");
    data_init(*d++, "53503534226472524250874054075591789781264330331690");
}


//---------------------------------------------------------------------
num_t = int(256);

{   X = 12;

    sum: &num_t := 0;

    x: &int := 0;

    loop
    {
        if (x >= X) v_break();

        s: &int := 0;

        y: &int := 0;

        loop
        {
            if (y >= SY) v_break();

            s += data[y][x];

            ++y;
        }

        sum := 10*sum + s;

        printf("%lld\n", (sum : long_long));

        ++x;
    }

}


//---------------------------------------------------------------------
{
    v_mfree(data);
}

