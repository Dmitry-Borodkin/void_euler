{   v_import("imports.void");
}

{   enable_imports(); }


//---------------------------------------------------------------------
{   N = 1000;

    D = v_malloc(int(32), N);
    defer v_mfree(D);

    pmax: &int := 0;
    nmax: &int := 0;

    for (n: &int := 1; n < N; ++n)
    {
        memset(D, 0, n*4);

//      printf("%3d ", n);

        t: &int := 1;

        for (i: &int := 0; ; ++i)
        {
            d = t / n;
            r = t % n;

//          printf("%d", d);

            if (D[r])
            {
                p = i - D[r];

                if (pmax < p)
                {
                    pmax := p;
                    nmax := n;
                }

//              printf(" %d\n", p);

                v_break();
            }

            D[r] := i;

            t := r * 10;
        }
    }

    printf("%d\n", nmax);
}


